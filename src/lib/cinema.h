#ifndef CINEMA_H
#define CINEMA_H

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
#include <stdarg.h>
#include <pthread.h>

typedef enum {
    FREE,
    BOOKED,
    DISABLED,
    SELECTED
} SeatState;

// Struttura per il posto
typedef struct {
    char row;
    int seat_number;
    SeatState state;
    pthread_mutex_t lock;
    char booking_code[18];
} Seat;

// Struttura per la sala
typedef struct {
    int rows;
    int columns;
    Seat **seats;
} Hall;

// Define the Film structure
typedef struct {
    char *name;
    char *genre;
    char *language;
    int duration;
    char *actors;
    char *plot;
    char *showtimes;
    int rows;      // Number of rows in the seating
    int columns;   // Number of columns in the seating
    int numbers_showtimes;  
    Hall *halls;
} Film;

// Define the Films structure
typedef struct {
    Film *list;
    int count;
} Films;

// Function to initialize the list of films
void initFilmsList(const char *filename, Films *filmsStruct);

// Function to initialize the seats
void initializeSeats(Hall *hall, int rows, int columns);

// Function to inizialize the halls data structures for a certain film
void createHallsForShowtimes(Film *film);

// Function to generate the hall map response, is a matrix in a string format
// The numbers represent the state of the seat as follows: 0 = FREE, 1 = BOOKED, 2 = DISABLED, 3 = SELECTED (enum SeatState)
void generateHallMapResponse(Hall *hall, char *buffer, size_t remaining_size);


// Function to book up to 4 seats in a hall, returns 0 if the booking was successful, 1 if there was an error
// the seats are passed as matrix of coordinates, the booking codes must be generated by the caller.
int bookSeats(Hall *hall, int numSeats, int seats[numSeats][2], char bookingCodes[numSeats][18]);


// Print the ticket to a buffer
// Example:
// ============== BIGLIETTO =============
// Codice prenotazione: 6LU572K7-LY7XBFAU
// Film: Titanic
// Orario: 18:00
// Posto: A4
// ======================================
void printTicketToBuff(char **buff, char *bookingCode, char *filmTitle, char *filmShowtime, int row, int col, size_t *remaining_size);


// Function used by the cron job to save the bookings to a file
// The file format is CSV, each line is a booking with the following format:
// film_id.showtime_id.seat.booking_code
int saveBookingsToFile(Films *filmsStruct, const char *filename);

// Loads the bookings from a file, the file format must be the same as the one saved by the saveBookingsToFile function
// Returns 0 if the bookings were loaded successfully, 1 if there was an error
int loadBookingsFromFile(Films *filmsStruct, const char *filename);

// Cleanups the memory allocated for the films list
void freeFilmsList(Films *filmsStruct);

#endif